<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Collect Class
 *
 * @package		LookingGlassSAE
 * @subpackage	Libraries
 * @category	Controller
 * @author		WDLTH
 * @link		http://www.wdlth.com/
 */

require (APPPATH . 'libraries/Wordlist.php');

class Collect extends CI_Controller {

	function __construct() {
		parent::__construct();
	}
	
	public function index()
	{
		exit('403 Forbidden.');
	}
	
	public function abovenet()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->alidns();
		
		$this->load->library('Wordlist');
		$url = $this->wordlist->abovenet("url", NULL);
		$ref = $this->wordlist->abovenet("ref", NULL);
		$post = $this->wordlist->abovenet("post", $ip);
		
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parseping($result);
			if($parseresult != "")
				print_r($parseresult);
		}else{
			log_message('warning', "Cannot receive data of ping from abovenet.");
			die("Error.");
		}
		
	}
	
	public function gblx()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->alidns();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->globalcrossing("url", NULL);
		$ref = $this->wordlist->globalcrossing("ref", NULL);
		$post = $this->wordlist->globalcrossing("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_css($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			/*$this->load->library('Parselib');
			$parseresult = $this->parselib->parseping($result);
			if($parseresult != "")
				print_r($parseresult);*/
			var_dump($result);
		}else{
			log_message('warning', "Cannot receive data of ping from abovenet.");
			die("Error.");
		}
	
	}
	
	public function level3()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->alidns();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->level3("url", NULL);
		$ref = $this->wordlist->level3("ref", NULL);
		$post = $this->wordlist->level3("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parselevel3($result);
			if($parseresult != "")
				print_r($parseresult);
		}else{
			log_message('warning', "Cannot receive data of ping from level3.");
			die("Error.");
		}
	
	}
	
	public function oneasiahost_ct()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->alidns();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->oneasiahost("url", NULL);
		$ref = $this->wordlist->oneasiahost("ref", NULL);
		$post = $this->wordlist->oneasiahost("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parseoah($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('OneAsiaHost', 'ChinaTelecom', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from oneasiahost.");
			die("Error.");
		}
	
	}
	
	public function oneasiahost_cu()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->cubackbone();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->oneasiahost("url", NULL);
		$ref = $this->wordlist->oneasiahost("ref", NULL);
		$post = $this->wordlist->oneasiahost("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parseoah($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('OneAsiaHost', 'ChinaUnicom', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from oneasiahost.");
			die("Error.");
		}
	
	}
	
	public function oneasiahost_cmcc()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->cmccbackbone();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->oneasiahost("url", NULL);
		$ref = $this->wordlist->oneasiahost("ref", NULL);
		$post = $this->wordlist->oneasiahost("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parseoah($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('OneAsiaHost', 'ChinaMobile', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from oneasiahost.");
			die("Error.");
		}
	
	}
	
	public function sunnyvision_ct()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->ctbackbone();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->sunnyvision("url", NULL);
		$ref = $this->wordlist->sunnyvision("ref", NULL);
		$post = $this->wordlist->sunnyvision("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parsesunnyvision($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('SunnyVision', 'ChinaTelecom', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from sunnyvision.");
			die("Error.");
		}
	
	}
	
	public function sunnyvision_cu()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->cubackbone();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->sunnyvision("url", NULL);
		$ref = $this->wordlist->sunnyvision("ref", NULL);
		$post = $this->wordlist->sunnyvision("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parsesunnyvision($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('SunnyVision', 'ChinaUnicom', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from sunnyvision.");
			die("Error.");
		}
	
	}
	
	public function sunnyvision_cmcc()
	{
		$this->load->library('Iplist');
		$ip = $this->iplist->cmccbackbone();
	
		$this->load->library('Wordlist');
		$url = $this->wordlist->sunnyvision("url", NULL);
		$ref = $this->wordlist->sunnyvision("ref", NULL);
		$post = $this->wordlist->sunnyvision("post", $ip);
	
		$this->load->library('Pinglib');
		$result = $this->pinglib->pre_code($url, $ref, $post);
		if($result != FALSE && $result != "")
		{
			$this->load->library('Parselib');
			$parseresult = $this->parselib->parsesunnyvision($result);
			if($parseresult != "")
			{
				$this->load->library('Dblib');
				$this->dblib->saveping('sunnyvision', 'ChinaMobile', $parseresult["min"], $parseresult["avg"], $parseresult["max"], $parseresult["loss"]);
				print_r($parseresult);
			}
		}else{
			log_message('warning', "Cannot receive data of ping from sunnyvision.");
			die("Error.");
		}
	
	}
	
}